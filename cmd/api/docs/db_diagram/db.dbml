Project DefiFundr {
  database_type: 'PostgreSQL'
  Note: '''
    **DefiFundr is a revolutionary decentralized payroll and invoice management system that bridges 
    the gap between traditional financial systems and blockchain technology. 
    The platform provides a seamless, secure, and transparent solution for businesses to manage employee payments, 
    handle freelancer invoices, and automate salary disbursements across both fiat and cryptocurrency channels.**
    '''
}

// Core User and Account Management
Table users {
  id UUID [pk]
  email VARCHAR(255) [unique]
  password_hash VARCHAR(255)
  auth_provider VARCHAR(50)
  provider_id VARCHAR(255)
  email_verified BOOLEAN
  email_verified_at TIMESTAMPTZ
  account_type VARCHAR(50)
  account_status VARCHAR(50)
  two_factor_enabled BOOLEAN
  two_factor_method VARCHAR(50)
  user_login_type VARCHAR(50)
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
  last_login_at TIMESTAMPTZ
  deleted_at TIMESTAMPTZ
}

Table personal_users {
  id UUID [pk, ref: > users.id]
  first_name VARCHAR(255)
  last_name VARCHAR(255)
  profile_picture VARCHAR(255)
  phone_number VARCHAR(50)
  phone_number_verified BOOLEAN
  phone_number_verified_at TIMESTAMPTZ
  nationality VARCHAR(255)
  residential_country VARCHAR(255)
  user_address VARCHAR(255)
  user_city VARCHAR(255)
  user_postal_code VARCHAR(255)
  gender VARCHAR(50)
  date_of_birth DATE
  job_role VARCHAR(255)
  personal_account_type VARCHAR(50)
  employment_type VARCHAR(50)
  tax_id VARCHAR(255)
  default_payment_currency VARCHAR(50)
  default_payment_method VARCHAR(50)
  hourly_rate DECIMAL(18, 2)
  specialization VARCHAR(255)
  kyc_status VARCHAR(50)
  kyc_verified_at TIMESTAMPTZ
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table companies {
  id UUID [pk]
  owner_id UUID [ref: > users.id]
  company_name VARCHAR(255)
  company_email VARCHAR(255)
  company_phone VARCHAR(50)
  company_size VARCHAR(50)
  company_industry VARCHAR(255)
  company_description TEXT
  company_headquarters VARCHAR(255)
  company_logo VARCHAR(255)
  company_website VARCHAR(255)
  primary_contact_name VARCHAR(255)
  primary_contact_email VARCHAR(255)
  primary_contact_phone VARCHAR(50)
  company_address VARCHAR(255)
  company_city VARCHAR(255)
  company_postal_code VARCHAR(255)
  company_country VARCHAR(255)
  company_registration_number VARCHAR(255)
  registration_country VARCHAR(255)
  tax_id VARCHAR(255)
  incorporation_date DATE
  account_status VARCHAR(50)
  kyb_status VARCHAR(50)
  kyb_verified_at TIMESTAMPTZ
  kyb_verification_method VARCHAR(50)
  kyb_verification_provider VARCHAR(255)
  kyb_rejection_reason TEXT
  legal_entity_type VARCHAR(50)
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table company_users {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  user_id UUID [ref: > users.id]
  role VARCHAR(50)
  department VARCHAR(100)
  job_title VARCHAR(255)
  is_administrator BOOLEAN
  can_manage_payroll BOOLEAN
  can_manage_invoices BOOLEAN
  can_manage_employees BOOLEAN
  can_manage_company_settings BOOLEAN
  can_manage_bank_accounts BOOLEAN
  can_manage_wallets BOOLEAN
  permissions JSONB
  is_active BOOLEAN
  added_by UUID [ref: > users.id]
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table company_staff_profiles {
  id UUID [pk, ref: > company_users.id]
  first_name VARCHAR(255)
  last_name VARCHAR(255)
  profile_picture VARCHAR(255)
  phone_number VARCHAR(50)
  email VARCHAR(255)
  department VARCHAR(100)
  job_title VARCHAR(255)
  reports_to UUID [ref: > company_users.id]
  hire_date DATE
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table company_employees {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  user_id UUID [ref: > users.id]
  employee_id VARCHAR(100)
  department VARCHAR(100)
  position VARCHAR(100)
  employment_status VARCHAR(50)
  employment_type VARCHAR(50)
  start_date DATE
  end_date DATE
  manager_id UUID [ref: > company_users.id]
  salary_amount DECIMAL(18, 6)
  salary_currency VARCHAR(10)
  salary_frequency VARCHAR(50)
  hourly_rate DECIMAL(18, 6)
  payment_method VARCHAR(50)
  payment_split JSONB
  tax_information JSONB
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Authentication
Table sessions {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  refresh_token VARCHAR(1024)
  user_agent TEXT
  client_ip VARCHAR(45)
  last_used_at TIMESTAMPTZ
  web_oauth_client_id TEXT
  oauth_access_token TEXT
  oauth_id_token TEXT
  user_login_type VARCHAR(100)
  mfa_verified BOOLEAN
  is_blocked BOOLEAN
  expires_at TIMESTAMPTZ
  created_at TIMESTAMPTZ
}

Table user_devices {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  device_token VARCHAR(255)
  platform VARCHAR(50)
  device_type VARCHAR(100)
  device_model VARCHAR(100)
  os_name VARCHAR(50)
  os_version VARCHAR(50)
  push_notification_token VARCHAR(255)
  is_active BOOLEAN
  is_verified BOOLEAN
  last_used_at TIMESTAMPTZ
  app_version VARCHAR(50)
  client_ip VARCHAR(45)
  expires_at TIMESTAMPTZ
  is_revoked BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table security_events {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  event_type VARCHAR(100)
  severity VARCHAR(50)
  ip_address VARCHAR(45)
  user_agent TEXT
  metadata JSONB
  created_at TIMESTAMPTZ
}

// Country Management
Table supported_countries {
  id UUID [pk]
  country_code VARCHAR(3)
  country_name VARCHAR(100)
  region VARCHAR(50)
  currency_code VARCHAR(3)
  currency_symbol VARCHAR(5)
  is_active BOOLEAN
  is_high_risk BOOLEAN
  requires_enhanced_kyc BOOLEAN
  requires_enhanced_kyb BOOLEAN
  timezone VARCHAR(50)
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table kyc_country_requirements {
  id UUID [pk]
  country_id UUID [ref: > supported_countries.id]
  document_type VARCHAR(50)
  is_required BOOLEAN
  requirement_description TEXT
  acceptable_document_formats VARCHAR(255)
  verification_level VARCHAR(50)
  additional_attributes JSONB
  is_active BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table kyb_country_requirements {
  id UUID [pk]
  country_id UUID [ref: > supported_countries.id]
  document_type VARCHAR(50)
  business_type VARCHAR(50)
  is_required BOOLEAN
  requirement_description TEXT
  acceptable_document_formats VARCHAR(255)
  verification_level VARCHAR(50)
  additional_attributes JSONB
  is_active BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table compliance_rules {
  id UUID [pk]
  country_id UUID [ref: > supported_countries.id]
  rule_type VARCHAR(50)
  entity_type VARCHAR(50)
  threshold_amount DECIMAL(18, 6)
  threshold_currency VARCHAR(3)
  rule_description TEXT
  regulatory_reference VARCHAR(255)
  action_required VARCHAR(50)
  is_active BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// KYC/KYB Management
Table kyc_documents {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  country_id UUID [ref: > supported_countries.id]
  document_type VARCHAR(50)
  document_number VARCHAR(100)
  document_country VARCHAR(100)
  issue_date DATE
  expiry_date DATE
  document_url VARCHAR(255)
  ipfs_hash VARCHAR(255)
  verification_status VARCHAR(50)
  verification_level VARCHAR(50)
  verification_notes TEXT
  verified_by UUID [ref: > users.id]
  verified_at TIMESTAMPTZ
  rejection_reason TEXT
  metadata JSONB
  meets_requirements BOOLEAN
  requirement_id UUID [ref: > kyc_country_requirements.id]
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table kyb_documents {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  country_id UUID [ref: > supported_countries.id]
  document_type VARCHAR(50)
  document_number VARCHAR(100)
  document_country VARCHAR(100)
  issue_date DATE
  expiry_date DATE
  document_url VARCHAR(255)
  ipfs_hash VARCHAR(255)
  verification_status VARCHAR(50)
  verification_level VARCHAR(50)
  verification_notes TEXT
  verified_by UUID [ref: > users.id]
  verified_at TIMESTAMPTZ
  rejection_reason TEXT
  metadata JSONB
  meets_requirements BOOLEAN
  requirement_id UUID [ref: > kyb_country_requirements.id]
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table kyc_verification_attempts {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  verification_provider VARCHAR(100)
  verification_reference VARCHAR(255)
  verification_status VARCHAR(50)
  verification_result VARCHAR(50)
  response_data JSONB
  error_message TEXT
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table kyb_verification_attempts {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  verification_provider VARCHAR(100)
  verification_reference VARCHAR(255)
  verification_status VARCHAR(50)
  verification_result VARCHAR(50)
  response_data JSONB
  error_message TEXT
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table user_country_kyc_status {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  country_id UUID [ref: > supported_countries.id]
  verification_status VARCHAR(50)
  verification_level VARCHAR(50)
  verification_date TIMESTAMPTZ
  expiry_date TIMESTAMPTZ
  rejection_reason TEXT
  notes TEXT
  risk_rating VARCHAR(20)
  restricted_features JSONB
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table company_country_kyb_status {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  country_id UUID [ref: > supported_countries.id]
  verification_status VARCHAR(50)
  verification_level VARCHAR(50)
  verification_date TIMESTAMPTZ
  expiry_date TIMESTAMPTZ
  rejection_reason TEXT
  notes TEXT
  risk_rating VARCHAR(20)
  restricted_features JSONB
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Wallet and Payment
Table supported_networks {
  id UUID [pk]
  name VARCHAR(100)
  chain_id INTEGER
  network_type VARCHAR(50)
  currency_symbol VARCHAR(10)
  block_explorer_url VARCHAR(255)
  rpc_url VARCHAR(255)
  is_evm_compatible BOOLEAN
  is_active BOOLEAN
  transaction_speed VARCHAR(50)
  average_block_time INTEGER
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table supported_tokens {
  id UUID [pk]
  network_id UUID [ref: > supported_networks.id]
  name VARCHAR(100)
  symbol VARCHAR(20)
  decimals INTEGER
  contract_address VARCHAR(255)
  token_type VARCHAR(50)
  logo_url VARCHAR(255)
  is_stablecoin BOOLEAN
  is_active BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table user_wallets {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  wallet_address VARCHAR(255)
  wallet_type VARCHAR(50)
  chain_id INTEGER
  is_default BOOLEAN
  is_verified BOOLEAN
  verification_method VARCHAR(50)
  verified_at TIMESTAMPTZ
  nickname VARCHAR(100)
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table company_wallets {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  wallet_address VARCHAR(255)
  wallet_type VARCHAR(50)
  chain_id INTEGER
  is_default BOOLEAN
  multisig_config JSONB
  required_approvals INTEGER
  wallet_name VARCHAR(100)
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table bank_accounts {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  account_number VARCHAR(255)
  account_holder_name VARCHAR(255)
  bank_name VARCHAR(255)
  bank_code VARCHAR(100)
  routing_number VARCHAR(100)
  swift_code VARCHAR(50)
  iban VARCHAR(100)
  account_type VARCHAR(50)
  currency VARCHAR(3)
  country VARCHAR(100)
  is_default BOOLEAN
  is_verified BOOLEAN
  verification_method VARCHAR(50)
  verified_at TIMESTAMPTZ
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Payroll Management
Table payroll_periods {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  period_name VARCHAR(100)
  frequency VARCHAR(50)
  start_date DATE
  end_date DATE
  payment_date DATE
  status VARCHAR(50)
  is_recurring BOOLEAN
  next_period_id UUID
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Self-referencing relationship for next_period_id
Ref: payroll_periods.next_period_id > payroll_periods.id

Table payrolls {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  period_id UUID [ref: > payroll_periods.id]
  name VARCHAR(255)
  description TEXT
  total_amount DECIMAL(24, 6)
  base_currency VARCHAR(10)
  status VARCHAR(50)
  execution_type VARCHAR(50)
  scheduled_execution_time TIMESTAMPTZ
  executed_at TIMESTAMPTZ
  smart_contract_address VARCHAR(255)
  chain_id INTEGER
  transaction_hash VARCHAR(255)
  created_by UUID [ref: > users.id]
  approved_by UUID [ref: > users.id]
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table payroll_items {
  id UUID [pk]
  payroll_id UUID [ref: > payrolls.id]
  employee_id UUID [ref: > company_employees.id]
  base_amount DECIMAL(18, 6)
  base_currency VARCHAR(10)
  payment_amount DECIMAL(18, 6)
  payment_currency VARCHAR(10)
  exchange_rate DECIMAL(24, 12)
  payment_method VARCHAR(50)
  payment_split JSONB
  status VARCHAR(50)
  transaction_hash VARCHAR(255)
  recipient_wallet_address VARCHAR(255)
  recipient_bank_account_id UUID [ref: > bank_accounts.id]
  notes TEXT
  timesheet_id UUID
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Invoice Management
Table invoices {
  id UUID [pk]
  invoice_number VARCHAR(100)
  issuer_id UUID [ref: > users.id]
  recipient_id UUID [ref: > companies.id]
  title VARCHAR(255)
  description TEXT
  issue_date DATE
  due_date DATE
  total_amount DECIMAL(18, 6)
  currency VARCHAR(10)
  status VARCHAR(50)
  payment_method VARCHAR(50)
  recipient_wallet_address VARCHAR(255)
  recipient_bank_account_id UUID [ref: > bank_accounts.id]
  transaction_hash VARCHAR(255)
  payment_date TIMESTAMPTZ
  rejection_reason TEXT
  ipfs_hash VARCHAR(255)
  smart_contract_address VARCHAR(255)
  chain_id INTEGER
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table invoice_items {
  id UUID [pk]
  invoice_id UUID [ref: > invoices.id]
  description TEXT
  quantity DECIMAL(10, 2)
  unit_price DECIMAL(18, 6)
  amount DECIMAL(18, 6)
  tax_rate DECIMAL(5, 2)
  tax_amount DECIMAL(18, 6)
  discount_percentage DECIMAL(5, 2)
  discount_amount DECIMAL(18, 6)
  total_amount DECIMAL(18, 6)
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table contracts {
  id UUID [pk]
  template_id UUID [ref: > contract_templates.id]
  company_id UUID [ref: > companies.id]
  employee_id UUID [ref: > company_employees.id]
  freelancer_id UUID [ref: > users.id]
  contract_title VARCHAR(255)
  contract_type VARCHAR(50)
  start_date DATE
  end_date DATE
  status VARCHAR(50)
  payment_terms JSONB
  contract_document_url VARCHAR(255)
  ipfs_hash VARCHAR(255)
  smart_contract_address VARCHAR(255)
  chain_id INTEGER
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table contract_templates {
  id UUID [pk]
  creator_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  name VARCHAR(255)
  description TEXT
  template_type VARCHAR(50)
  template_content JSONB
  is_public BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table payment_requests {
  id UUID [pk]
  creator_id UUID [ref: > users.id]
  recipient_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  request_title VARCHAR(255)
  description TEXT
  amount DECIMAL(18, 6)
  currency VARCHAR(10)
  status VARCHAR(50)
  expiry_date TIMESTAMPTZ
  payment_link VARCHAR(255)
  qr_code_url VARCHAR(255)
  payment_method VARCHAR(50)
  recipient_wallet_address VARCHAR(255)
  recipient_bank_account_id UUID [ref: > bank_accounts.id]
  transaction_hash VARCHAR(255)
  paid_at TIMESTAMPTZ
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Timesheet Management
Table timesheets {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  employee_id UUID [ref: > company_employees.id]
  period_id UUID [ref: > payroll_periods.id]
  status VARCHAR(50)
  total_hours DECIMAL(8, 2)
  billable_hours DECIMAL(8, 2)
  overtime_hours DECIMAL(8, 2)
  hourly_rate DECIMAL(18, 6)
  rate_currency VARCHAR(10)
  total_amount DECIMAL(18, 6)
  submitted_at TIMESTAMPTZ
  approved_at TIMESTAMPTZ
  approved_by UUID [ref: > users.id]
  rejection_reason TEXT
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Link payroll_items to timesheets
Ref: payroll_items.timesheet_id > timesheets.id

Table timesheet_entries {
  id UUID [pk]
  timesheet_id UUID [ref: > timesheets.id]
  date DATE
  start_time TIME
  end_time TIME
  hours DECIMAL(5, 2)
  is_billable BOOLEAN
  is_overtime BOOLEAN
  project VARCHAR(255)
  task VARCHAR(255)
  description TEXT
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Transaction Management
Table wallet_transactions {
  id UUID [pk]
  wallet_address VARCHAR(255)
  transaction_hash VARCHAR(255)
  chain_id INTEGER
  block_number BIGINT
  from_address VARCHAR(255)
  to_address VARCHAR(255)
  token_address VARCHAR(255)
  token_symbol VARCHAR(20)
  amount DECIMAL(36, 18)
  transaction_type VARCHAR(50)
  transaction_status VARCHAR(50)
  gas_price DECIMAL(36, 18)
  gas_used BIGINT
  transaction_fee DECIMAL(36, 18)
  reference_type VARCHAR(50)
  reference_id UUID
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table fiat_transactions {
  id UUID [pk]
  bank_account_id UUID [ref: > bank_accounts.id]
  transaction_reference VARCHAR(255)
  transaction_type VARCHAR(50)
  amount DECIMAL(18, 6)
  currency VARCHAR(3)
  status VARCHAR(50)
  payment_provider VARCHAR(100)
  payment_method VARCHAR(50)
  provider_reference VARCHAR(255)
  provider_fee DECIMAL(18, 6)
  reference_type VARCHAR(50)
  reference_id UUID
  metadata JSONB
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table exchange_rates {
  id UUID [pk]
  base_currency VARCHAR(10)
  quote_currency VARCHAR(10)
  rate DECIMAL(24, 12)
  source VARCHAR(100)
  timestamp TIMESTAMPTZ
  created_at TIMESTAMPTZ
}

// Leave Management
Table leave_types {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  name VARCHAR(100)
  description TEXT
  is_paid BOOLEAN
  accrual_rate DECIMAL(5, 2)
  accrual_period VARCHAR(20)
  maximum_balance DECIMAL(5, 2)
  is_active BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table leave_balances {
  id UUID [pk]
  employee_id UUID [ref: > company_employees.id]
  leave_type_id UUID [ref: > leave_types.id]
  balance DECIMAL(6, 2)
  accrued DECIMAL(6, 2)
  used DECIMAL(6, 2)
  last_accrual_date DATE
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table leave_requests {
  id UUID [pk]
  employee_id UUID [ref: > company_employees.id]
  leave_type_id UUID [ref: > leave_types.id]
  start_date DATE
  end_date DATE
  days DECIMAL(5, 2)
  reason TEXT
  status VARCHAR(50)
  approved_by UUID [ref: > users.id]
  approved_at TIMESTAMPTZ
  rejected_reason TEXT
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Expenses Management
Table expense_categories {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  name VARCHAR(100)
  description TEXT
  is_active BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table expenses {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  category_id UUID [ref: > expense_categories.id]
  amount DECIMAL(18, 6)
  currency VARCHAR(10)
  expense_date DATE
  description TEXT
  receipt_url VARCHAR(255)
  ipfs_hash VARCHAR(255)
  status VARCHAR(50)
  payment_transaction_id UUID
  approved_by UUID [ref: > users.id]
  approved_at TIMESTAMPTZ
  rejected_reason TEXT
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Tax Management
Table tax_rates {
  id UUID [pk]
  country_id UUID [ref: > supported_countries.id]
  region VARCHAR(100)
  tax_type VARCHAR(50)
  rate DECIMAL(6, 3)
  effective_date DATE
  expiry_date DATE
  description TEXT
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table tax_calculations {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  reference_type VARCHAR(50)
  reference_id UUID
  tax_rate_id UUID [ref: > tax_rates.id]
  taxable_amount DECIMAL(18, 6)
  tax_amount DECIMAL(18, 6)
  calculation_date DATE
  tax_period VARCHAR(20)
  status VARCHAR(50)
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table tax_documents {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  country_id UUID [ref: > supported_countries.id]
  document_type VARCHAR(50)
  tax_year INTEGER
  document_url VARCHAR(255)
  ipfs_hash VARCHAR(255)
  status VARCHAR(50)
  expires_at DATE
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Notification System
Table notification_templates {
  id UUID [pk]
  template_name VARCHAR(100)
  template_type VARCHAR(50)
  subject VARCHAR(255)
  content TEXT
  variables JSONB
  is_active BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table notifications {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  template_id UUID [ref: > notification_templates.id]
  notification_type VARCHAR(50)
  title VARCHAR(255)
  content TEXT
  reference_type VARCHAR(50)
  reference_id UUID
  is_read BOOLEAN
  read_at TIMESTAMPTZ
  delivery_status VARCHAR(50)
  priority VARCHAR(20)
  created_at TIMESTAMPTZ
}

// Roles and Permissions
Table roles {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  role_name VARCHAR(100)
  description TEXT
  is_system_role BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table permissions {
  id UUID [pk]
  permission_key VARCHAR(100)
  description TEXT
  category VARCHAR(100)
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table role_permissions {
  id UUID [pk]
  role_id UUID [ref: > roles.id]
  permission_id UUID [ref: > permissions.id]
  created_at TIMESTAMPTZ
}

Table user_roles {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  role_id UUID [ref: > roles.id]
  company_id UUID [ref: > companies.id]
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// System Configuration
Table system_settings {
  id UUID [pk]
  setting_key VARCHAR(100)
  setting_value TEXT
  data_type VARCHAR(50)
  description TEXT
  is_sensitive BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table company_settings {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  setting_key VARCHAR(100)
  setting_value TEXT
  data_type VARCHAR(50)
  description TEXT
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table user_settings {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  setting_key VARCHAR(100)
  setting_value TEXT
  data_type VARCHAR(50)
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

// Audit and Logging
Table audit_logs {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  action VARCHAR(100)
  entity_type VARCHAR(100)
  entity_id UUID
  previous_state JSONB
  new_state JSONB
  ip_address VARCHAR(45)
  user_agent TEXT
  created_at TIMESTAMPTZ
}

Table activity_logs {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  activity_type VARCHAR(100)
  description TEXT
  metadata JSONB
  ip_address VARCHAR(45)
  user_agent TEXT
  created_at TIMESTAMPTZ
}

// API and Integration
Table api_keys {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  api_key_hash VARCHAR(255)
  name VARCHAR(100)
  permissions JSONB
  expires_at TIMESTAMPTZ
  is_active BOOLEAN
  last_used_at TIMESTAMPTZ
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table integration_connections {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  integration_type VARCHAR(100)
  provider VARCHAR(100)
  access_token TEXT
  refresh_token TEXT
  token_expires_at TIMESTAMPTZ
  connection_data JSONB
  is_active BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table webhooks {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  company_id UUID [ref: > companies.id]
  webhook_url VARCHAR(255)
  event_types VARCHAR[]
  secret_key VARCHAR(255)
  description TEXT
  is_active BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table feature_flags {
  id UUID [pk]
  flag_key VARCHAR(100)
  description TEXT
  is_enabled BOOLEAN
  rollout_percentage INTEGER
  conditions JSONB
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table user_feature_flags {
  id UUID [pk]
  user_id UUID [ref: > users.id]
  flag_key VARCHAR(100)
  is_enabled BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}

Table company_feature_flags {
  id UUID [pk]
  company_id UUID [ref: > companies.id]
  flag_key VARCHAR(100)
  is_enabled BOOLEAN
  created_at TIMESTAMPTZ
  updated_at TIMESTAMPTZ
}