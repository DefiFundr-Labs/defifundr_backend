services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: defifundr-api
    volumes:
      - .:/app
      - go-modules:/go/pkg/mod
    ports:
      - "8080:8080"
      - "2345:2345"
    environment:
      - DB_SOURCE=postgresql://root:secret@postgres:5432/defi?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - defifundr-network
    restart: on-failure

  prometheus:
    image: prom/prometheus:latest
    container_name: defifundr-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - api
    networks:
      - defifundr-network

  postgres:
    image: postgres:15-alpine
    container_name: defifundr-postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=defi
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d defi"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - defifundr-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: defifundr-pgadmin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@defifundr.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
      - PGADMIN_CONFIG_SERVER_MODE=False
    depends_on:
      - postgres
    networks:
      - defifundr-network

  grafana:
    image: grafana/grafana:latest
    container_name: defifundr-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: defifundr-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - api
    networks:
      - defifundr-network

# Networks
networks:
  defifundr-network:
    driver: bridge

# Volumes
volumes:
  postgres-data:
    driver: local
  pgadmin-data:
    driver: local
  grafana-data:
    driver: local
  go-modules:
    driver: local